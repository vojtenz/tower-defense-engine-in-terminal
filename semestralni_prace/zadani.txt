Naprogramujte jendoduchou grafickou tower defense hru

Váš engine:

    ze souboru nahraje definici věží (cena, velikost, útok, dosah, ...)
    ze souboru nahraje možné mapy a typy nepřátel (životy, rychlost, odolnost na určitý typ věže ,...)
    implementuje jednoduchou interakci věž vs. útočníci (útok, proběhnutí, ...), počitadlo skóre, detekci vítězství (po nezabití x útočníků)
    implementuje alespoň 2 strategie průchodu hracím polem
    umožňuje ukládat a načítat rozehrané hry

Engine může fungovat jako real-time hra, či tahová hra.

Jak může vypadat mapa?

" " označuje možnou lokaci věže a prázdné místa, A, B označuje dva druhy věží, # označuje zeď, @ a % jsou různé druhy útočníků.


#################################################
#                        #       @@  #          #
#         #              #    %B  @  ###        #
#         #              #    %#  @    #    B   #
<=%%%     #              A    %#       #@@@@@@@<=
#         #              A    %#       @@   B   #
#                        A    %#                #
#                 %%%       %%%#                #
#################################################

Cesta kudy se budu útočníci ubírat bude vždy nejkratší možná vzhledem ke zdím a věžím. "Nejkratší" se může lišit pro létající (ignorují zdi) a pozemní jednotky. Pro chytré jednotky, které se vyhýbají věžím. Pro jednotky s krátkým dohledem (k pohybu využívají jen informaci o okolí 5ti polí a cíl).

Kde lze využít polymorfismus? (doporučené)

    Parametry věží: znak, barva, dosah, zranění, ...
    Efekty útoku věží: zranění, zpomalení, ...
    Políčka mapy: volno, věž, útočník ...
    Strategie hledání cesty: předdefinovaná cesta, nejkratší (BFS, případně náhodná odchylka), A* prohledávání, vyhýbání se věžím
    Uživatelské rozhraní: konzole, ncurses, SDL, OpenGL (různé varianty), ...

Ukázky:

    https://en.wikipedia.org/wiki/Tower_defense
    https://en.wikipedia.org/wiki/GemCraft
    http://plantsvszombies.wikia.com/wiki/Main_Page

Upřesňující zadání:

Při vypracovávání jsem se inspiroval principem tower defense hry TD BLOONS 5
-Z předem daného souboru se načte definice věží a nepátel.
-Načte se také z předem daného souboru definice mapy, mapa může a nemusí obsahovat cestu kudy nepřátel jdou. Pokud cestu neobsahuje,
 cesta se pomocí BFS vyhledá sama a do mapy zakreslí. Mapa je reprezentována jako 1D pole ukazelů na společnou třídu CTile.
-Mapa musí být čtyřúhelník, musí obsahovat právě jeden start a právě jeden cíl
-Po spuštění hry se objeví menu, lze nakoupit věže či začít kolo, ukládat rozehranou hru či načítat uloženou hru
-Po spuštění kola se nepřátelé pohybují po cestě až do cíle, kolo končí pokud jsou všichni nepřátelé zabiti nebo se mnoho nepřátel dostalo až  do cíle
-Mapa je reprezentována jako vektor ukazatelů na hlavní abstraktní třídu CTile, veškeré políčka na mapě jsou jejími potomky. Potomci musí impl ementovat metodu getType(), potomci dále můžou implementovat například vlastní print metodu, která defalutně vypíše jen symbol
-CEmpty, CStart, CEnd, CPath, CWall jsou třídy reprezentující prvky na mapě
-Na mapě se vyskytují i věže a nepřátelé
-CTower je abstraktní třída společná pro všechny druhy věží, každý druh věže, který je potomek CTower musí implementovat metodu clone
-CEnemy je abstraktní třída společná pro všechny druhy nepřátel, každý druh nepřátelé, který je pomotek CEnemy musí implementovat metodu clone a metodu towerVisit, podle které daný typ nepřítele reaguje (například někteří nepřátelé jsou immunní vůči různým věžím)	
